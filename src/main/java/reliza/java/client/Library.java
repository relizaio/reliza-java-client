/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package reliza.java.client;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import lombok.extern.slf4j.Slf4j;
import okhttp3.Credentials;
import retrofit2.Call;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.jackson.JacksonConverterFactory;

@Slf4j
public class Library {
	Flags flags;
	private static Retrofit retrofit = new Retrofit.Builder()
			.baseUrl("https://test.relizahub.com")
			.addConverterFactory(JacksonConverterFactory.create())
			.build();
	
	Library(String apiKeyId, String apiKey, String branch, String projectId) {
		this.flags = new Flags(apiKeyId, apiKey, branch, projectId);
	}
	
    @SuppressWarnings("unchecked")
	public String getVersion() {
        RHService rhs = retrofit.create(RHService.class);
        Map<String, String> body = new HashMap<>();  
    	body.put("branch", flags.getBranch());
    	if (flags.getProjectId().length() > 0) {
        	body.put("project", flags.getProjectId());
    	}
    	String basicAuth = Credentials.basic(flags.getApiKeyId(), flags.getApiKey());
        Call<Map<String, Object>> homeResp = rhs.getVersionCall(body, basicAuth);
    	
        try {
			Response<Map<String, Object>> resp = homeResp.execute();
			log.info(resp.body().toString());
			return resp.body().toString();
		} catch (IOException e) {
			log.error("IO exception", e);
			return null;
		}
    }
}
